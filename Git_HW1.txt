GIT Homework 1


 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

JSON
 4. Создать внешний репозиторий c названием JSON.

Repositories ==> New ==> Repos Name:JSON ==> Check "Add a README file" --> Press "Create repository"

 5. Клонировать репозиторий JSON на локальный компьютер.

git clone repository htts

 6. Внутри локального JSON создать файл “new.json”.

touch new.json

 7. Добавить файл под гит

git add new.json

 8. Закоммитить файл.

git commit -m "add file new.json"

 9. Отправить файл на внешний GitHub репозиторий.

git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

cat > new.json

{
    "Full Name":"Trushin Nikita Andreevich",
    "Age":29,
    "Number of pets":0,
    "desired salary":"1000$"
}

 11. Отправить изменения на внешний репозиторий.

git commit -am "add name age and etc" && git push

 12. Создать файл preferences.json

touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

cat >preferences.json

{
	"favorite_movie": " Saw",
	"favorite_series": "Ozark",
	"favorite_food": "kebab",
	"favorite_time_of_the_year": "summer",
	"country_you_would_like_to_visit": "Japan"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json

{
	"Skill1":"Testing Theory, SDLC, STLC",
	"Skill2":"Clien-server",
	"Skill3":"HTTP-methods",
	"Skill4":"HTTP status-codes",
	"Skill5":"HTTP resp, req stracture",
	"Skill6":"JSON, XML. Structure",
	"Skill7":"API Postman (JS, autotest API).",
	"Skill8":"Logs from servers",
	"Skill9":"Charles and Fiddler.",
	"Skill10":"Dev Tools(Google Chrome, FireFox).",
	"Skill11":"VPN.",
	"Skill12":"Mobile testing",
	"Skill13":"IOS, android guidelines",
	"Skill14":"XCode.",
	"Skill15":"Android Studio.",
	"Skill16":"ADB",
	"Skill17":"iOS Android proxy, vpn",
	"Skill18":"Mobile trafic sniffing. Charles and Fiddler iOS, Android.",
	"Skill19":"terminal Linux",
	"Skill20":"bash scripting",
	"Skill21":"Remote servers access",
	"Skill22":"SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).",
	"Skill23":"DB Postgres.",
	"Skill24":"Redis",
	"Skill25":"Load testing Jmeter.",
	"Skill26":"Scrum.",
	"Skill27":"Python."
}

 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "add preferences.json and skill.json"
git push

#или в 1 строку  git add . && git commit -m "add preferences.json and skill.json" && git push

 16. На веб интерфейсе создать файл bug_report.json.

Add file ==> Create new file ==> Name: bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Press "Commit changes"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

 Choose bug_report.json ==> Edit this file

{
  "Environment":"Description of environment",
  "ID":"nubmer of bug report" ,
  "Summary":"What?Where?Why?",
  "Environment":"pc,mobile,browser,build",
  "STR":{
          "Step1":"step1 description",
          "Step2":"step2 description"          
        },
        "version","Number of  version",
  "Severity":"s1,s2,s3,s4,s5",
  "Priority":"p1,p2,p3",
  "Expected Result":"<Description of expected result>",
  "Actual Result":"<Description of actual result>",
  "Attachments":"link,video,photo"
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Press "Commit changes"

 20. Синхронизировать внешний и локальный репозиторий JSON

git pull


XML
 21. Создать внешний репозиторий c названием XML.

Repositories ==> New ==> Repos Name:XML ==> Check "Add a README file" ==> Press "Create repository"

 22. Клонировать репозиторий XML на локальный компьютер.

git clone  rep_link

 23. Внутри локального XML создать файл “new.xml”.

touch new.xml

 24. Добавить файл под гит.

git add new.xml

 25. Закоммитить файл.

git commit -m "add new.xml"


 26. Отправить файл на внешний GitHub репозиторий.

git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.

cat > new.xml

<?xml version="1.0" encoding="utf-8"?>
<information_about_yourself>
	<full_name>Trushin Nikita Andreevich </full_name>
	<age>29</age>
	<number_of_pets>0</number_of_pets>
	<future_desired_salary>1000</future_desired_salary>
</information_about_yourself>
#ctrl+c

 28. Отправить изменения на внешний репозиторий.

git add new.xml
git commit -m "add info in new.xml "   
git push

 29. Создать файл preferences.xml

touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

cat >preferences.xml

<?xml version="1.0" encoding="utf-8"?>
<my_preferences>
		<favorite_movie>Saw</favorite_movie>
		<favorite_series>Ozark</favorite_series>
		<favorite_food>kebab</favorite_food>
		<favorite_time_of_year>summer</favorite_time_of_year>
		<country_i_would_like_to_visit>Japan</country_i_would_like_to_visit>
</my_preferences>
#ctrl+c

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat >skills.xml

<?xml version="1.0" encoding="UTF-8"?>
<Skills_I_Learn>
	<Skill1>Базовая теория (Что такое тестирование,документация,техники тест дизайна,виды тестирования и т.д.)</Skill1>
	<Skill2>Клиент-серверная архитектрура</Skill2>
	<Skill3>Статус коды ответов HTTP сервера</Skill3>
	<Skill4>HTTP методы запросов на сервер</Skill4>
	<Skill5>Структуры HTTP запросов и ответов</Skill5>
	<Skill6>Что такое JSON,XML.Их структура</Skill6>
	<Skill7>Тестирование API через Postman</Skill7>
	<Skill8>Снятие и чтение логов с внешнего сервера</Skill8>
	<Skill9>Снифинг http web трафика через Charles и Fiddler</Skill9>
	<Skill10>Dev Tools веб браузеров (Google Chrome,FireFox)</Skill10>
	<Skill11>Мобильное тестирование</Skill11>
	<Skill12>Особенность iOS,Android,гайдлайны</Skill12>
	<Skill13>Сборка Android приложений на Android Studio</Skill13>
	<Skill14>ADB(Управление андройд девайсами)</Skill14>
	<Skill15>Настройка прокси и vpn на ios и Android</Skill15>
	<Skill16>Перехват(сниффинг) мобильного трафика через Charles и Fiddler на ios и android</Skill16>
	<Skill17>Командная строка (terminal) Linux(копирование,создание,просмотр,перемещение файлов на серверах без графического интерфейса)</Skill17>
	<Skill18>Основы bash скриптинг,автоматизация рутинных задач на сервере</Skill18>
	<Skill19>Доступ к удалённым серверам</Skill19>
	<Skill20>Основы SQL (Create,Delete,Drop,Insert Into,Select,From,Where,Having,Join)</Skill20>
	<Skill21>База данных Postgres(установка,настройка и использование)</Skill21>
	<Skill22>Нагрузочное тестирование в Jmeter</Skill22>
	<Skill23>Методология разработки Scrum</Skill23>
	<Skill24>Python(Основы)</Skill24>
</Skills_I_Learn>

 32. Сделать коммит в одну строку.

git add.&&git commit -m "add skills and preferences"

 33. Отправить сразу 2 файла на внешний репозиторий.

git push

 34. На веб интерфейсе создать файл bug_report.xml.
Add file ==> Create new file ==> Name: bug_report.xml

<?xml version="1.0" encoding="utf-8"?>
<bug_report_structure>
    <summary>краткое описание</summary>
    <project>проект</project>
    <Environment>окружение</Environment>
    <ID>id</ID>
    <component>компонент приложения,модуль</component>
    <version>номер версии</version>
    <severity>серьезность</severity>
    <priority>приоритет</priority>
    <steps_to_reproduce>шаги воспроизведения</steps_to_reproduce>
    <Assigned_to>кому назначен</Assigned to>
    <actual_result>фактический результат</actual_result>
    <expected_result>ожидаемый результат</expected_result>
    <additional_information>дополнения</additional_information>
</bug_report_structure>

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Press "Commit changes"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

Choose bug_report.xml --> Edit this file

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Press "Commit changes"

 38. Синхронизировать внешний и локальный репозиторий XML
git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
Repositories==>New==>Repositoty name:TXT==>Check "Add a README file"==>Press "Create repository"

 2. Клонировать репозиторий TXT на локальный компьютер.
git clone <HTTPS repository>

 3. Внутри локального TXT создать файл “new.txt”.
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
git commit -m "add txt file"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat > new.txt
1.full name:Trushin Nikita Andreevich
2.age:29
3.number of pets:0
4.future desired salary:1000$
#ctrl+c

 8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -m "add name,age,number of pets,disired salary"
git push

 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
cat >preferences.txt
My preferences:
1)favorite movie:"Saw"
2)favorite serial:"Ozark"
3)favorite food:kebab
4)favorite time of a year:summer
5)country i want to visit:Japan
#ctrl+c

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT

cat >skills.txt
1.Базовая теория (Что такое тестирование,документация,техники тест дизайна,виды тестирования и т.д.)
2.Клиент-серверная архитектрура.
3.Статус коды ответов HTTP сервера.
4.HTTP методы запросов на сервер.
5.Структуры HTTP запросов и ответов.
6.Что такое JSON,XML.Их структура.
7.Тестирование API через Postman.
8.Снятие и чтение логов с внешнего сервера.
9.Снифинг http web трафика через Charles и Fiddler.
10.Dev Tools веб браузеров (Google Chrome,FireFox)
11.Мобильное тестирование.
12.Особенность iOS,Android,гайдлайны.
13.Сборка Android приложений на Android Studio.
14.ADB(Управление андройд девайсами).
15.Настройка прокси и vpn на ios и Android.
16.Перехват(сниффинг) мобильного трафика через Charles и Fiddler на ios и android.
17.Командная строка (terminal) Linux(копирование,создание,просмотр,перемещение файлов на серверах без графического интерфейса).
18.Основы bash скриптинг,автоматизация рутинных задач на сервере.
19.Доступ к удалённым серверам.
20.Основы SQL (Create,Delete,Drop,Insert Into,Select,From,Where,Having,Join).
21.База данных Postgres(установка,настройка и использование).
22.Нагрузочное тестирование в Jmeter.
23.Методология разработки Scrum.
24.Python(Основы).


 12. Сделать коммит в одну строку.
git add --all && git commit -m "add preferences.txt and skills.txt"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
Add file ==> Create new file ==> Name: bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Press "Commit changes"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Choose bug_report.txt --> Edit this file

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Press "Commit changes"

 18. Синхронизировать внешний и локальный репозиторий TXT
git pull